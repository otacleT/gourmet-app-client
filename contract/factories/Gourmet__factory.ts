/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Gourmet, GourmetInterface } from "../Gourmet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "shopId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    name: "starLog",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shopId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_uStar",
        type: "uint256",
      },
    ],
    name: "Rating",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102c8806100206000396000f3fe6080604052600436106100225760003560e01c8063fdefdf8d1461002b57610029565b3661002957005b005b34801561003757600080fd5b50610052600480360381019061004d9190610135565b610054565b005b600080600080858152602001908152602001600020541415610078578190506100a5565b6002826000808681526020019081526020016000205461009891906101a4565b6100a29190610229565b90505b80600080858152602001908152602001600020819055507f0e741df6b0624c5c581e31faae13a05230f8c4ba18a8f82924adc7d80d80daac83826040516100ed929190610269565b60405180910390a1505050565b600080fd5b6000819050919050565b610112816100ff565b811461011d57600080fd5b50565b60008135905061012f81610109565b92915050565b6000806040838503121561014c5761014b6100fa565b5b600061015a85828601610120565b925050602061016b85828601610120565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006101af826100ff565b91506101ba836100ff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101ef576101ee610175565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610234826100ff565b915061023f836100ff565b92508261024f5761024e6101fa565b5b828204905092915050565b610263816100ff565b82525050565b600060408201905061027e600083018561025a565b61028b602083018461025a565b939250505056fea2646970667358221220287ff7fe02aad39b52821d0e04e8aa4a2e4268b8ed7bfaa6087523f81f729f5864736f6c63430008090033";

type GourmetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GourmetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gourmet__factory extends ContractFactory {
  constructor(...args: GourmetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Gourmet> {
    return super.deploy(overrides || {}) as Promise<Gourmet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Gourmet {
    return super.attach(address) as Gourmet;
  }
  override connect(signer: Signer): Gourmet__factory {
    return super.connect(signer) as Gourmet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GourmetInterface {
    return new utils.Interface(_abi) as GourmetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Gourmet {
    return new Contract(address, _abi, signerOrProvider) as Gourmet;
  }
}
